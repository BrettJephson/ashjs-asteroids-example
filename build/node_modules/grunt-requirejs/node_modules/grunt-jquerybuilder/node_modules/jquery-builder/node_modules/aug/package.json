{
  "name": "aug",
  "description": "a library to augment objects and prototypes",
  "version": "0.0.5",
  "homepage": "https://github.com/jgallen23/aug",
  "author": {
    "name": "Greg Allen",
    "email": "@jgaui",
    "url": "http://jga.me"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jgallen23/aug.git"
  },
  "dependencies": {},
  "devDependencies": {
    "chai": "*",
    "markx": "*",
    "mocha": "*",
    "smoosh": "*"
  },
  "main": "./lib/aug.js",
  "keywords": [
    "ender",
    "extend",
    "objects",
    "prototype"
  ],
  "readme": "# aug.js\nAug.js is simple augment/extend library.  If you've used jQuery's $.extend, then you will be familiar with it.\n\n## Installation\n\ndownload [aug.js](https://github.com/jgallen23/aug/raw/master/dist/aug.js) from dist directory. \n\nor if you are using node\n\n\tnpm install aug\n\n## Usage\n\n\t//Great for overriding defaults\n\tvar a = { a: 1 };\n\tvar b = { a: 2, b: 3 };\n\taug(a, b); //a = { a: 2, b: 3};\n\n\t//Combining two objects\n\tvar a = { a: 1 };\n\tvar b = { b: 3 };\n\tvar c = aug({}, a, b); \n\t//c = { a: 1, b: 3};\n\n\t//Extending a function\n\tvar f = function() {};\n\taug(f, {\n\t\tprop: 42\n\t});\n\t//f.prop == 42\n\n\t//Extending a prototype\n\tvar Class1 = function() { };\n\tClass1.prototype.test = function() {\n\t\treturn 0;\n\t};\n\n\taug(Class1.prototype, {\n\t\ttest2: function() {\n\t\t\treturn 5;\n\t\t}\n\t});\n\tvar c = new Class();\n\tc.test(); //returns 0;\n\tc.test2(); //returns 5\n\n\n",
  "_id": "aug@0.0.5",
  "_from": "aug@0.0.5"
}
