{
  "name": "resistance",
  "description": "a flow controller",
  "version": "2.0.0alpha2",
  "homepage": "https://github.com/jgallen23/resistance",
  "author": {
    "name": "Greg Allen",
    "email": "@jgaui",
    "url": "http://jga.me"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jgallen23/resistance.git"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "smoosh": "*"
  },
  "main": "./dist/resistance.js",
  "ender": "./lib/ender.js",
  "keywords": [
    "ender",
    "flow"
  ],
  "readme": "# Resistance\n----\nResistance is a tiny (579 bytes, 347 bytes gzipped) flow control library for javascript.\n\n## Usage\n\n``` js\n\nR.series([\n  function(cb) { setTimeout(function() { console.log(\"Series 1 (500)\"); cb(1); }, 500); },\n  function(cb) { setTimeout(function() { console.log(\"Series 2 (250)\"); cb(2); }, 250); },\n  function(cb) { setTimeout(function() { console.log(\"Series 3 (100)\"); cb(3); }, 100); }\n  ], function(data) {\n    console.log(\"Series Complete\", data);\n});\n\nR.parallel([\n  function(cb) { setTimeout(function() { console.log(\"Parallel 1 (500)\"); cb(1); }, 500); },\n  function(cb) { setTimeout(function() { console.log(\"Parallel 2 (250)\"); cb(2); }, 250); },\n  function(cb) { setTimeout(function() { console.log(\"Parallel 3 (100)\"); cb(3); }, 100); }\n  ], function(data) {\n    console.log(\"Parallel Complete\", data);\n});\n\n```\n\n## Output\n\n    Parallel 3 (100)\n    Parallel 2 (250)\n    Series 1 (500)\n    Parallel 1 (500)\n    Parallel Complete [ 1, 2, 3 ]\n    Series 2 (250)\n    Series 3 (100)\n    Series Complete [ 1, 2, 3 ]\n\n## Node.js Support\n\n``` npm install resistance ```\n\n## Ender Support\n\n``` ender build resistance ```\n\n``` js\n\n$.runSeries([]);\n$.runParallel([]);\n\n```\n",
  "_id": "resistance@2.0.0alpha2",
  "_from": "resistance@2.0.0alpha2"
}
